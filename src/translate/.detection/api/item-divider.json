{
  "filePath": "src/components/item-divider/item-divider.tsx",
  "encapsulation": "shadow",
  "tag": "ion-item-divider",
  "docs": "",
  "docsTags": [
    {
      "name": "virtualProp",
      "text": "{\"ios\" | \"md\"} mode - The mode determines which platform styles to use."
    },
    {
      "name": "slot",
      "text": "- Content is placed between the named slots if provided without a slot."
    },
    {
      "name": "slot",
      "text": "start - Content is placed to the left of the divider text in LTR, and to the right in RTL."
    },
    {
      "name": "slot",
      "text": "end - Content is placed to the right of the divider text in LTR, and to the left in RTL."
    }
  ],
  "usage": {},
  "props": [
    {
      "name": "color",
      "type": "\"danger\" | \"dark\" | \"light\" | \"medium\" | \"primary\" | \"secondary\" | \"success\" | \"tertiary\" | \"warning\" | string & Record<never, never> | undefined",
      "complexType": {
        "original": "Color",
        "resolved": "\"danger\" | \"dark\" | \"light\" | \"medium\" | \"primary\" | \"secondary\" | \"success\" | \"tertiary\" | \"warning\" | string & Record<never, never> | undefined",
        "references": {
          "Color": {
            "location": "import",
            "path": "../../interface",
            "id": "src/interface.d.ts::Color"
          }
        }
      },
      "mutable": false,
      "attr": "color",
      "reflectToAttr": true,
      "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
      "docsTags": [],
      "values": [
        {
          "value": "danger",
          "type": "string"
        },
        {
          "value": "dark",
          "type": "string"
        },
        {
          "value": "light",
          "type": "string"
        },
        {
          "value": "medium",
          "type": "string"
        },
        {
          "value": "primary",
          "type": "string"
        },
        {
          "value": "secondary",
          "type": "string"
        },
        {
          "value": "success",
          "type": "string"
        },
        {
          "value": "tertiary",
          "type": "string"
        },
        {
          "value": "warning",
          "type": "string"
        },
        {
          "type": "string & Record<never, never>"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "mode",
      "type": "\"ios\" | \"md\"",
      "mutable": false,
      "attr": "mode",
      "reflectToAttr": false,
      "docs": "The mode determines which platform styles to use.",
      "docsTags": [],
      "values": [
        {
          "value": "ios",
          "type": "string"
        },
        {
          "value": "md",
          "type": "string"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "sticky",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "sticky",
      "reflectToAttr": false,
      "docs": "When it's set to `true`, the item-divider will stay visible when it reaches the top\nof the viewport until the next `ion-item-divider` replaces it.\n\nThis feature relies in `position:sticky`:\nhttps://caniuse.com/#feat=css-sticky",
      "docsTags": [
        {
          "name": "default",
          "text": "false"
        }
      ],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false,
      "getter": false,
      "setter": false
    }
  ],
  "methods": [],
  "events": [],
  "listeners": [],
  "styles": [
    {
      "name": "--background",
      "annotation": "prop",
      "docs": "Background of the item divider",
      "mode": "ios"
    },
    {
      "name": "--background",
      "annotation": "prop",
      "docs": "Background of the item divider",
      "mode": "md"
    },
    {
      "name": "--color",
      "annotation": "prop",
      "docs": "Color of the item divider",
      "mode": "ios"
    },
    {
      "name": "--color",
      "annotation": "prop",
      "docs": "Color of the item divider",
      "mode": "md"
    },
    {
      "name": "--inner-padding-bottom",
      "annotation": "prop",
      "docs": "Bottom inner padding of the item divider",
      "mode": "ios"
    },
    {
      "name": "--inner-padding-bottom",
      "annotation": "prop",
      "docs": "Bottom inner padding of the item divider",
      "mode": "md"
    },
    {
      "name": "--inner-padding-end",
      "annotation": "prop",
      "docs": "End inner padding of the item divider",
      "mode": "ios"
    },
    {
      "name": "--inner-padding-end",
      "annotation": "prop",
      "docs": "End inner padding of the item divider",
      "mode": "md"
    },
    {
      "name": "--inner-padding-start",
      "annotation": "prop",
      "docs": "Start inner padding of the item divider",
      "mode": "ios"
    },
    {
      "name": "--inner-padding-start",
      "annotation": "prop",
      "docs": "Start inner padding of the item divider",
      "mode": "md"
    },
    {
      "name": "--inner-padding-top",
      "annotation": "prop",
      "docs": "Top inner padding of the item divider",
      "mode": "ios"
    },
    {
      "name": "--inner-padding-top",
      "annotation": "prop",
      "docs": "Top inner padding of the item divider",
      "mode": "md"
    },
    {
      "name": "--padding-bottom",
      "annotation": "prop",
      "docs": "Bottom padding of the item divider",
      "mode": "ios"
    },
    {
      "name": "--padding-bottom",
      "annotation": "prop",
      "docs": "Bottom padding of the item divider",
      "mode": "md"
    },
    {
      "name": "--padding-end",
      "annotation": "prop",
      "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item divider",
      "mode": "ios"
    },
    {
      "name": "--padding-end",
      "annotation": "prop",
      "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item divider",
      "mode": "md"
    },
    {
      "name": "--padding-start",
      "annotation": "prop",
      "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item divider",
      "mode": "ios"
    },
    {
      "name": "--padding-start",
      "annotation": "prop",
      "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item divider",
      "mode": "md"
    },
    {
      "name": "--padding-top",
      "annotation": "prop",
      "docs": "Top padding of the item divider",
      "mode": "ios"
    },
    {
      "name": "--padding-top",
      "annotation": "prop",
      "docs": "Top padding of the item divider",
      "mode": "md"
    }
  ],
  "slots": [
    {
      "name": "",
      "docs": "Content is placed between the named slots if provided without a slot."
    },
    {
      "name": "end",
      "docs": "Content is placed to the right of the divider text in LTR, and to the left in RTL."
    },
    {
      "name": "start",
      "docs": "Content is placed to the left of the divider text in LTR, and to the right in RTL."
    }
  ],
  "parts": [],
  "dependents": [],
  "dependencies": [],
  "dependencyGraph": {}
}