{
  "filePath": "src/components/menu-toggle/menu-toggle.tsx",
  "encapsulation": "shadow",
  "tag": "ion-menu-toggle",
  "docs": "",
  "docsTags": [
    {
      "name": "slot",
      "text": "- Content is placed inside the toggle to act as the click target."
    }
  ],
  "usage": {},
  "props": [
    {
      "name": "autoHide",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "auto-hide",
      "reflectToAttr": false,
      "docs": "Automatically hides the content when the corresponding menu is not active.\n\nBy default, it's `true`. Change it to `false` in order to\nkeep `ion-menu-toggle` always visible regardless the state of the menu.",
      "docsTags": [
        {
          "name": "default",
          "text": "true"
        }
      ],
      "default": "true",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "menu",
      "type": "string | undefined",
      "complexType": {
        "original": "string",
        "resolved": "string | undefined",
        "references": {}
      },
      "mutable": false,
      "attr": "menu",
      "reflectToAttr": false,
      "docs": "Optional property that maps to a Menu's `menuId` prop.\nCan also be `start` or `end` for the menu side.\nThis is used to find the correct menu to toggle.\n\nIf this property is not used, `ion-menu-toggle` will toggle the\nfirst menu that is active.",
      "docsTags": [],
      "values": [
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false,
      "getter": false,
      "setter": false
    }
  ],
  "methods": [],
  "events": [],
  "listeners": [
    {
      "event": "ionMenuChange",
      "target": "body",
      "capture": false,
      "passive": false
    },
    {
      "event": "ionSplitPaneVisible",
      "target": "body",
      "capture": false,
      "passive": false
    }
  ],
  "styles": [],
  "slots": [
    {
      "name": "",
      "docs": "Content is placed inside the toggle to act as the click target."
    }
  ],
  "parts": [],
  "dependents": [],
  "dependencies": [],
  "dependencyGraph": {}
}