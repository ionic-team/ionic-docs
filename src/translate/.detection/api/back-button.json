{
  "filePath": "src/components/back-button/back-button.tsx",
  "encapsulation": "shadow",
  "tag": "ion-back-button",
  "docs": "",
  "docsTags": [
    {
      "name": "virtualProp",
      "text": "{\"ios\" | \"md\"} mode - The mode determines which platform styles to use."
    },
    {
      "name": "part",
      "text": "native - The native HTML button element that wraps all child elements."
    },
    {
      "name": "part",
      "text": "icon - The back button icon (uses ion-icon)."
    },
    {
      "name": "part",
      "text": "text - The back button text."
    }
  ],
  "usage": {},
  "props": [
    {
      "name": "color",
      "type": "\"danger\" | \"dark\" | \"light\" | \"medium\" | \"primary\" | \"secondary\" | \"success\" | \"tertiary\" | \"warning\" | string & Record<never, never> | undefined",
      "complexType": {
        "original": "Color",
        "resolved": "\"danger\" | \"dark\" | \"light\" | \"medium\" | \"primary\" | \"secondary\" | \"success\" | \"tertiary\" | \"warning\" | string & Record<never, never> | undefined",
        "references": {
          "Color": {
            "location": "import",
            "path": "../../interface",
            "id": "src/interface.d.ts::Color"
          }
        }
      },
      "mutable": false,
      "attr": "color",
      "reflectToAttr": true,
      "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
      "docsTags": [],
      "values": [
        {
          "value": "danger",
          "type": "string"
        },
        {
          "value": "dark",
          "type": "string"
        },
        {
          "value": "light",
          "type": "string"
        },
        {
          "value": "medium",
          "type": "string"
        },
        {
          "value": "primary",
          "type": "string"
        },
        {
          "value": "secondary",
          "type": "string"
        },
        {
          "value": "success",
          "type": "string"
        },
        {
          "value": "tertiary",
          "type": "string"
        },
        {
          "value": "warning",
          "type": "string"
        },
        {
          "type": "string & Record<never, never>"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "defaultHref",
      "type": "string | undefined",
      "complexType": {
        "original": "string",
        "resolved": "string | undefined",
        "references": {}
      },
      "mutable": true,
      "attr": "default-href",
      "reflectToAttr": false,
      "docs": "The url to navigate back to by default when there is no history.",
      "docsTags": [],
      "values": [
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "disabled",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "disabled",
      "reflectToAttr": true,
      "docs": "If `true`, the user cannot interact with the button.",
      "docsTags": [
        {
          "name": "default",
          "text": "false"
        }
      ],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "icon",
      "type": "null | string | undefined",
      "complexType": {
        "original": "string | null",
        "resolved": "null | string | undefined",
        "references": {}
      },
      "mutable": false,
      "attr": "icon",
      "reflectToAttr": false,
      "docs": "The built-in named SVG icon name or the exact `src` of an SVG file\nto use for the back button.",
      "docsTags": [],
      "values": [
        {
          "type": "null"
        },
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "mode",
      "type": "\"ios\" | \"md\"",
      "mutable": false,
      "attr": "mode",
      "reflectToAttr": false,
      "docs": "The mode determines which platform styles to use.",
      "docsTags": [],
      "values": [
        {
          "value": "ios",
          "type": "string"
        },
        {
          "value": "md",
          "type": "string"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "routerAnimation",
      "type": "((baseEl: any, opts?: any) => Animation) | undefined",
      "complexType": {
        "original": "AnimationBuilder | undefined",
        "resolved": "((baseEl: any, opts?: any) => Animation) | undefined",
        "references": {
          "AnimationBuilder": {
            "location": "import",
            "path": "../../interface",
            "id": "src/interface.d.ts::AnimationBuilder"
          }
        }
      },
      "mutable": false,
      "attr": "router-animation",
      "reflectToAttr": false,
      "docs": "When using a router, it specifies the transition animation when navigating to\nanother page.",
      "docsTags": [],
      "values": [
        {
          "type": "((baseEl: any, opts?: any) => Animation)"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": false,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "text",
      "type": "null | string | undefined",
      "complexType": {
        "original": "string | null",
        "resolved": "null | string | undefined",
        "references": {}
      },
      "mutable": false,
      "attr": "text",
      "reflectToAttr": false,
      "docs": "The text to display in the back button.",
      "docsTags": [],
      "values": [
        {
          "type": "null"
        },
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "type",
      "type": "\"button\" | \"reset\" | \"submit\"",
      "complexType": {
        "original": "'submit' | 'reset' | 'button'",
        "resolved": "\"button\" | \"reset\" | \"submit\"",
        "references": {}
      },
      "mutable": false,
      "attr": "type",
      "reflectToAttr": false,
      "docs": "The type of the button.",
      "docsTags": [
        {
          "name": "default",
          "text": "'button'"
        }
      ],
      "default": "'button'",
      "values": [
        {
          "value": "button",
          "type": "string"
        },
        {
          "value": "reset",
          "type": "string"
        },
        {
          "value": "submit",
          "type": "string"
        }
      ],
      "optional": false,
      "required": false,
      "getter": false,
      "setter": false
    }
  ],
  "methods": [],
  "events": [],
  "listeners": [],
  "styles": [
    {
      "name": "--background",
      "annotation": "prop",
      "docs": "Background of the button",
      "mode": "ios"
    },
    {
      "name": "--background",
      "annotation": "prop",
      "docs": "Background of the button",
      "mode": "md"
    },
    {
      "name": "--background-focused",
      "annotation": "prop",
      "docs": "Background of the button when focused with the tab key",
      "mode": "ios"
    },
    {
      "name": "--background-focused",
      "annotation": "prop",
      "docs": "Background of the button when focused with the tab key",
      "mode": "md"
    },
    {
      "name": "--background-focused-opacity",
      "annotation": "prop",
      "docs": "Opacity of the button background when focused with the tab key",
      "mode": "ios"
    },
    {
      "name": "--background-focused-opacity",
      "annotation": "prop",
      "docs": "Opacity of the button background when focused with the tab key",
      "mode": "md"
    },
    {
      "name": "--background-hover",
      "annotation": "prop",
      "docs": "Background of the button on hover",
      "mode": "ios"
    },
    {
      "name": "--background-hover",
      "annotation": "prop",
      "docs": "Background of the button on hover",
      "mode": "md"
    },
    {
      "name": "--background-hover-opacity",
      "annotation": "prop",
      "docs": "Opacity of the background on hover",
      "mode": "ios"
    },
    {
      "name": "--background-hover-opacity",
      "annotation": "prop",
      "docs": "Opacity of the background on hover",
      "mode": "md"
    },
    {
      "name": "--border-radius",
      "annotation": "prop",
      "docs": "Border radius of the button",
      "mode": "ios"
    },
    {
      "name": "--border-radius",
      "annotation": "prop",
      "docs": "Border radius of the button",
      "mode": "md"
    },
    {
      "name": "--color",
      "annotation": "prop",
      "docs": "Text color of the button",
      "mode": "ios"
    },
    {
      "name": "--color",
      "annotation": "prop",
      "docs": "Text color of the button",
      "mode": "md"
    },
    {
      "name": "--color-focused",
      "annotation": "prop",
      "docs": "Text color of the button when focused with the tab key",
      "mode": "ios"
    },
    {
      "name": "--color-focused",
      "annotation": "prop",
      "docs": "Text color of the button when focused with the tab key",
      "mode": "md"
    },
    {
      "name": "--color-hover",
      "annotation": "prop",
      "docs": "Text color of the button on hover",
      "mode": "ios"
    },
    {
      "name": "--color-hover",
      "annotation": "prop",
      "docs": "Text color of the button on hover",
      "mode": "md"
    },
    {
      "name": "--icon-font-size",
      "annotation": "prop",
      "docs": "Font size of the button icon",
      "mode": "ios"
    },
    {
      "name": "--icon-font-size",
      "annotation": "prop",
      "docs": "Font size of the button icon",
      "mode": "md"
    },
    {
      "name": "--icon-font-weight",
      "annotation": "prop",
      "docs": "Font weight of the button icon",
      "mode": "ios"
    },
    {
      "name": "--icon-font-weight",
      "annotation": "prop",
      "docs": "Font weight of the button icon",
      "mode": "md"
    },
    {
      "name": "--icon-margin-bottom",
      "annotation": "prop",
      "docs": "Bottom margin of the button icon",
      "mode": "ios"
    },
    {
      "name": "--icon-margin-bottom",
      "annotation": "prop",
      "docs": "Bottom margin of the button icon",
      "mode": "md"
    },
    {
      "name": "--icon-margin-end",
      "annotation": "prop",
      "docs": "Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button icon",
      "mode": "ios"
    },
    {
      "name": "--icon-margin-end",
      "annotation": "prop",
      "docs": "Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button icon",
      "mode": "md"
    },
    {
      "name": "--icon-margin-start",
      "annotation": "prop",
      "docs": "Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button icon",
      "mode": "ios"
    },
    {
      "name": "--icon-margin-start",
      "annotation": "prop",
      "docs": "Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button icon",
      "mode": "md"
    },
    {
      "name": "--icon-margin-top",
      "annotation": "prop",
      "docs": "Top margin of the button icon",
      "mode": "ios"
    },
    {
      "name": "--icon-margin-top",
      "annotation": "prop",
      "docs": "Top margin of the button icon",
      "mode": "md"
    },
    {
      "name": "--icon-padding-bottom",
      "annotation": "prop",
      "docs": "Bottom padding of the button icon",
      "mode": "ios"
    },
    {
      "name": "--icon-padding-bottom",
      "annotation": "prop",
      "docs": "Bottom padding of the button icon",
      "mode": "md"
    },
    {
      "name": "--icon-padding-end",
      "annotation": "prop",
      "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button icon",
      "mode": "ios"
    },
    {
      "name": "--icon-padding-end",
      "annotation": "prop",
      "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button icon",
      "mode": "md"
    },
    {
      "name": "--icon-padding-start",
      "annotation": "prop",
      "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button icon",
      "mode": "ios"
    },
    {
      "name": "--icon-padding-start",
      "annotation": "prop",
      "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button icon",
      "mode": "md"
    },
    {
      "name": "--icon-padding-top",
      "annotation": "prop",
      "docs": "Top padding of the button icon",
      "mode": "ios"
    },
    {
      "name": "--icon-padding-top",
      "annotation": "prop",
      "docs": "Top padding of the button icon",
      "mode": "md"
    },
    {
      "name": "--margin-bottom",
      "annotation": "prop",
      "docs": "Bottom margin of the button",
      "mode": "ios"
    },
    {
      "name": "--margin-bottom",
      "annotation": "prop",
      "docs": "Bottom margin of the button",
      "mode": "md"
    },
    {
      "name": "--margin-end",
      "annotation": "prop",
      "docs": "Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button",
      "mode": "ios"
    },
    {
      "name": "--margin-end",
      "annotation": "prop",
      "docs": "Right margin if direction is left-to-right, and left margin if direction is right-to-left of the button",
      "mode": "md"
    },
    {
      "name": "--margin-start",
      "annotation": "prop",
      "docs": "Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button",
      "mode": "ios"
    },
    {
      "name": "--margin-start",
      "annotation": "prop",
      "docs": "Left margin if direction is left-to-right, and right margin if direction is right-to-left of the button",
      "mode": "md"
    },
    {
      "name": "--margin-top",
      "annotation": "prop",
      "docs": "Top margin of the button",
      "mode": "ios"
    },
    {
      "name": "--margin-top",
      "annotation": "prop",
      "docs": "Top margin of the button",
      "mode": "md"
    },
    {
      "name": "--min-height",
      "annotation": "prop",
      "docs": "Minimum height of the button",
      "mode": "ios"
    },
    {
      "name": "--min-height",
      "annotation": "prop",
      "docs": "Minimum height of the button",
      "mode": "md"
    },
    {
      "name": "--min-width",
      "annotation": "prop",
      "docs": "Minimum width of the button",
      "mode": "ios"
    },
    {
      "name": "--min-width",
      "annotation": "prop",
      "docs": "Minimum width of the button",
      "mode": "md"
    },
    {
      "name": "--opacity",
      "annotation": "prop",
      "docs": "Opacity of the button",
      "mode": "ios"
    },
    {
      "name": "--opacity",
      "annotation": "prop",
      "docs": "Opacity of the button",
      "mode": "md"
    },
    {
      "name": "--padding-bottom",
      "annotation": "prop",
      "docs": "Bottom padding of the button",
      "mode": "ios"
    },
    {
      "name": "--padding-bottom",
      "annotation": "prop",
      "docs": "Bottom padding of the button",
      "mode": "md"
    },
    {
      "name": "--padding-end",
      "annotation": "prop",
      "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button",
      "mode": "ios"
    },
    {
      "name": "--padding-end",
      "annotation": "prop",
      "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button",
      "mode": "md"
    },
    {
      "name": "--padding-start",
      "annotation": "prop",
      "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button",
      "mode": "ios"
    },
    {
      "name": "--padding-start",
      "annotation": "prop",
      "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button",
      "mode": "md"
    },
    {
      "name": "--padding-top",
      "annotation": "prop",
      "docs": "Top padding of the button",
      "mode": "ios"
    },
    {
      "name": "--padding-top",
      "annotation": "prop",
      "docs": "Top padding of the button",
      "mode": "md"
    },
    {
      "name": "--ripple-color",
      "annotation": "prop",
      "docs": "Color of the button ripple effect",
      "mode": "ios"
    },
    {
      "name": "--ripple-color",
      "annotation": "prop",
      "docs": "Color of the button ripple effect",
      "mode": "md"
    },
    {
      "name": "--transition",
      "annotation": "prop",
      "docs": "Transition of the button",
      "mode": "ios"
    },
    {
      "name": "--transition",
      "annotation": "prop",
      "docs": "Transition of the button",
      "mode": "md"
    }
  ],
  "slots": [],
  "parts": [
    {
      "name": "icon",
      "docs": "The back button icon (uses ion-icon)."
    },
    {
      "name": "native",
      "docs": "The native HTML button element that wraps all child elements."
    },
    {
      "name": "text",
      "docs": "The back button text."
    }
  ],
  "dependents": [],
  "dependencies": [
    "ion-icon",
    "ion-ripple-effect"
  ],
  "dependencyGraph": {
    "ion-back-button": [
      "ion-icon",
      "ion-ripple-effect"
    ]
  }
}