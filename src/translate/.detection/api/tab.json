{
  "filePath": "src/components/tab/tab.tsx",
  "encapsulation": "shadow",
  "tag": "ion-tab",
  "docs": "",
  "docsTags": [],
  "usage": {},
  "props": [
    {
      "name": "component",
      "type": "Function | HTMLElement | null | string | undefined",
      "complexType": {
        "original": "ComponentRef",
        "resolved": "Function | HTMLElement | null | string | undefined",
        "references": {
          "ComponentRef": {
            "location": "import",
            "path": "../../interface",
            "id": "src/interface.d.ts::ComponentRef"
          }
        }
      },
      "mutable": false,
      "attr": "component",
      "reflectToAttr": false,
      "docs": "The component to display inside of the tab.",
      "docsTags": [],
      "values": [
        {
          "type": "Function"
        },
        {
          "type": "HTMLElement"
        },
        {
          "type": "null"
        },
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "tab",
      "type": "string",
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "mutable": false,
      "attr": "tab",
      "reflectToAttr": false,
      "docs": "A tab id must be provided for each `ion-tab`. It's used internally to reference\nthe selected tab or by the router to switch between them.",
      "docsTags": [],
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": true,
      "getter": false,
      "setter": false
    }
  ],
  "methods": [
    {
      "name": "setActive",
      "returns": {
        "type": "Promise<void>",
        "docs": ""
      },
      "complexType": {
        "signature": "() => Promise<void>",
        "parameters": [],
        "references": {
          "Promise": {
            "location": "global",
            "id": "global::Promise"
          }
        },
        "return": "Promise<void>"
      },
      "signature": "setActive() => Promise<void>",
      "parameters": [],
      "docs": "Set the active component for the tab",
      "docsTags": []
    }
  ],
  "events": [],
  "listeners": [],
  "styles": [],
  "slots": [],
  "parts": [],
  "dependents": [],
  "dependencies": [],
  "dependencyGraph": {}
}