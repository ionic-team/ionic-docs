{
  "filePath": "src/components/datetime/datetime.tsx",
  "encapsulation": "shadow",
  "tag": "ion-datetime",
  "docs": "",
  "docsTags": [
    {
      "name": "virtualProp",
      "text": "{\"ios\" | \"md\"} mode - The mode determines which platform styles to use."
    },
    {
      "name": "slot",
      "text": "title - The title of the datetime."
    },
    {
      "name": "slot",
      "text": "buttons - The buttons in the datetime."
    },
    {
      "name": "slot",
      "text": "time-label - The label for the time selector in the datetime."
    },
    {
      "name": "part",
      "text": "wheel-item - The individual items when using a wheel style layout, or in the\nmonth/year picker when using a grid style layout."
    },
    {
      "name": "part",
      "text": "wheel-item active - The currently selected wheel-item."
    },
    {
      "name": "part",
      "text": "time-button - The button that opens the time picker when using a grid style\nlayout with `presentation=\"date-time\"` or `\"time-date\"`."
    },
    {
      "name": "part",
      "text": "time-button active - The time picker button when the picker is open."
    },
    {
      "name": "part",
      "text": "month-year-button - The button that opens the month/year picker when\nusing a grid style layout."
    },
    {
      "name": "part",
      "text": "calendar-day - The individual buttons that display a day inside of the datetime\ncalendar."
    },
    {
      "name": "part",
      "text": "calendar-day active - The currently selected calendar day."
    },
    {
      "name": "part",
      "text": "calendar-day today - The calendar day that contains the current day."
    },
    {
      "name": "part",
      "text": "calendar-day disabled - The calendar day that is disabled."
    }
  ],
  "usage": {},
  "props": [
    {
      "name": "cancelText",
      "type": "string",
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "mutable": false,
      "attr": "cancel-text",
      "reflectToAttr": false,
      "docs": "The text to display on the picker's cancel button.",
      "docsTags": [],
      "default": "'Cancel'",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "clearText",
      "type": "string",
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "mutable": false,
      "attr": "clear-text",
      "reflectToAttr": false,
      "docs": "The text to display on the picker's \"Clear\" button.",
      "docsTags": [],
      "default": "'Clear'",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "color",
      "type": "\"danger\" | \"dark\" | \"light\" | \"medium\" | \"primary\" | \"secondary\" | \"success\" | \"tertiary\" | \"warning\" | string & Record<never, never> | undefined",
      "complexType": {
        "original": "Color",
        "resolved": "\"danger\" | \"dark\" | \"light\" | \"medium\" | \"primary\" | \"secondary\" | \"success\" | \"tertiary\" | \"warning\" | string & Record<never, never> | undefined",
        "references": {
          "Color": {
            "location": "import",
            "path": "../../interface",
            "id": "src/interface.d.ts::Color"
          }
        }
      },
      "mutable": false,
      "attr": "color",
      "reflectToAttr": false,
      "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
      "docsTags": [],
      "default": "'primary'",
      "values": [
        {
          "value": "danger",
          "type": "string"
        },
        {
          "value": "dark",
          "type": "string"
        },
        {
          "value": "light",
          "type": "string"
        },
        {
          "value": "medium",
          "type": "string"
        },
        {
          "value": "primary",
          "type": "string"
        },
        {
          "value": "secondary",
          "type": "string"
        },
        {
          "value": "success",
          "type": "string"
        },
        {
          "value": "tertiary",
          "type": "string"
        },
        {
          "value": "warning",
          "type": "string"
        },
        {
          "type": "string & Record<never, never>"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "dayValues",
      "type": "number | number[] | string | undefined",
      "complexType": {
        "original": "number[] | number | string",
        "resolved": "number | number[] | string | undefined",
        "references": {}
      },
      "mutable": false,
      "attr": "day-values",
      "reflectToAttr": false,
      "docs": "Values used to create the list of selectable days. By default\nevery day is shown for the given month. However, to control exactly which days of\nthe month to display, the `dayValues` input can take a number, an array of numbers, or\na string of comma separated numbers. Note that even if the array days have an invalid\nnumber for the selected month, like `31` in February, it will correctly not show\ndays which are not valid for the selected month.",
      "docsTags": [],
      "values": [
        {
          "type": "number"
        },
        {
          "type": "number[]"
        },
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "disabled",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "disabled",
      "reflectToAttr": false,
      "docs": "If `true`, the user cannot interact with the datetime.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "doneText",
      "type": "string",
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "mutable": false,
      "attr": "done-text",
      "reflectToAttr": false,
      "docs": "The text to display on the picker's \"Done\" button.",
      "docsTags": [],
      "default": "'Done'",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "firstDayOfWeek",
      "type": "number",
      "complexType": {
        "original": "number",
        "resolved": "number",
        "references": {}
      },
      "mutable": false,
      "attr": "first-day-of-week",
      "reflectToAttr": false,
      "docs": "The first day of the week to use for `ion-datetime`. The\ndefault value is `0` and represents Sunday.",
      "docsTags": [],
      "default": "0",
      "values": [
        {
          "type": "number"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "highlightedDates",
      "type": "((dateIsoString: string) => DatetimeHighlightStyle | undefined) | DatetimeHighlight[] | undefined",
      "complexType": {
        "original": "DatetimeHighlight[] | DatetimeHighlightCallback",
        "resolved": "((dateIsoString: string) => DatetimeHighlightStyle | undefined) | DatetimeHighlight[] | undefined",
        "references": {
          "DatetimeHighlight": {
            "location": "import",
            "path": "./datetime-interface",
            "id": "src/components/datetime/datetime-interface.ts::DatetimeHighlight"
          },
          "DatetimeHighlightCallback": {
            "location": "import",
            "path": "./datetime-interface",
            "id": "src/components/datetime/datetime-interface.ts::DatetimeHighlightCallback"
          }
        }
      },
      "mutable": false,
      "reflectToAttr": false,
      "docs": "Used to apply custom text and background colors to specific dates.\n\nCan be either an array of objects containing ISO strings and colors,\nor a callback that receives an ISO string and returns the colors.\n\nOnly applies to the `date`, `date-time`, and `time-date` presentations,\nwith `preferWheel=\"false\"`.",
      "docsTags": [],
      "values": [
        {
          "type": "((dateIsoString: string) => DatetimeHighlightStyle"
        },
        {
          "type": "undefined)"
        },
        {
          "type": "DatetimeHighlight[]"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "hourCycle",
      "type": "\"h11\" | \"h12\" | \"h23\" | \"h24\" | undefined",
      "complexType": {
        "original": "DatetimeHourCycle",
        "resolved": "\"h11\" | \"h12\" | \"h23\" | \"h24\" | undefined",
        "references": {
          "DatetimeHourCycle": {
            "location": "import",
            "path": "./datetime-interface",
            "id": "src/components/datetime/datetime-interface.ts::DatetimeHourCycle"
          }
        }
      },
      "mutable": false,
      "attr": "hour-cycle",
      "reflectToAttr": false,
      "docs": "The hour cycle of the `ion-datetime`. If no value is set, this is\nspecified by the current locale.",
      "docsTags": [],
      "values": [
        {
          "value": "h11",
          "type": "string"
        },
        {
          "value": "h12",
          "type": "string"
        },
        {
          "value": "h23",
          "type": "string"
        },
        {
          "value": "h24",
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "hourValues",
      "type": "number | number[] | string | undefined",
      "complexType": {
        "original": "number[] | number | string",
        "resolved": "number | number[] | string | undefined",
        "references": {}
      },
      "mutable": false,
      "attr": "hour-values",
      "reflectToAttr": false,
      "docs": "Values used to create the list of selectable hours. By default\nthe hour values range from `0` to `23` for 24-hour, or `1` to `12` for 12-hour. However,\nto control exactly which hours to display, the `hourValues` input can take a number, an\narray of numbers, or a string of comma separated numbers.",
      "docsTags": [],
      "values": [
        {
          "type": "number"
        },
        {
          "type": "number[]"
        },
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "isDateEnabled",
      "type": "((dateIsoString: string) => boolean) | undefined",
      "complexType": {
        "original": "(dateIsoString: string) => boolean",
        "resolved": "((dateIsoString: string) => boolean) | undefined",
        "references": {}
      },
      "mutable": false,
      "reflectToAttr": false,
      "docs": "Returns if an individual date (calendar day) is enabled or disabled.\n\nIf `true`, the day will be enabled/interactive.\nIf `false`, the day will be disabled/non-interactive.\n\nThe function accepts an ISO 8601 date string of a given day.\nBy default, all days are enabled. Developers can use this function\nto write custom logic to disable certain days.\n\nThe function is called for each rendered calendar day, for the previous, current and next month.\nCustom implementations should be optimized for performance to avoid jank.",
      "docsTags": [],
      "values": [
        {
          "type": "((dateIsoString: string) => boolean)"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "locale",
      "type": "string",
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "mutable": false,
      "attr": "locale",
      "reflectToAttr": false,
      "docs": "The locale to use for `ion-datetime`. This\nimpacts month and day name formatting.\nThe `\"default\"` value refers to the default\nlocale set by your device.",
      "docsTags": [],
      "default": "'default'",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "max",
      "type": "string | undefined",
      "complexType": {
        "original": "string",
        "resolved": "string | undefined",
        "references": {}
      },
      "mutable": true,
      "attr": "max",
      "reflectToAttr": false,
      "docs": "The maximum datetime allowed. Value must be a date string\nfollowing the\n[ISO 8601 datetime format standard](https://www.w3.org/TR/NOTE-datetime),\n`1996-12-19`. The format does not have to be specific to an exact\ndatetime. For example, the maximum could just be the year, such as `1994`.\nDefaults to the end of this year.",
      "docsTags": [],
      "values": [
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "min",
      "type": "string | undefined",
      "complexType": {
        "original": "string",
        "resolved": "string | undefined",
        "references": {}
      },
      "mutable": true,
      "attr": "min",
      "reflectToAttr": false,
      "docs": "The minimum datetime allowed. Value must be a date string\nfollowing the\n[ISO 8601 datetime format standard](https://www.w3.org/TR/NOTE-datetime),\nsuch as `1996-12-19`. The format does not have to be specific to an exact\ndatetime. For example, the minimum could just be the year, such as `1994`.\nDefaults to the beginning of the year, 100 years ago from today.",
      "docsTags": [],
      "values": [
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "minuteValues",
      "type": "number | number[] | string | undefined",
      "complexType": {
        "original": "number[] | number | string",
        "resolved": "number | number[] | string | undefined",
        "references": {}
      },
      "mutable": false,
      "attr": "minute-values",
      "reflectToAttr": false,
      "docs": "Values used to create the list of selectable minutes. By default\nthe minutes range from `0` to `59`. However, to control exactly which minutes to display,\nthe `minuteValues` input can take a number, an array of numbers, or a string of comma\nseparated numbers. For example, if the minute selections should only be every 15 minutes,\nthen this input value would be `minuteValues=\"0,15,30,45\"`.",
      "docsTags": [],
      "values": [
        {
          "type": "number"
        },
        {
          "type": "number[]"
        },
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "mode",
      "type": "\"ios\" | \"md\"",
      "mutable": false,
      "attr": "mode",
      "reflectToAttr": false,
      "docs": "The mode determines which platform styles to use.",
      "docsTags": [],
      "values": [
        {
          "value": "ios",
          "type": "string"
        },
        {
          "value": "md",
          "type": "string"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "monthValues",
      "type": "number | number[] | string | undefined",
      "complexType": {
        "original": "number[] | number | string",
        "resolved": "number | number[] | string | undefined",
        "references": {}
      },
      "mutable": false,
      "attr": "month-values",
      "reflectToAttr": false,
      "docs": "Values used to create the list of selectable months. By default\nthe month values range from `1` to `12`. However, to control exactly which months to\ndisplay, the `monthValues` input can take a number, an array of numbers, or a string of\ncomma separated numbers. For example, if only summer months should be shown, then this\ninput value would be `monthValues=\"6,7,8\"`. Note that month numbers do *not* have a\nzero-based index, meaning January's value is `1`, and December's is `12`.",
      "docsTags": [],
      "values": [
        {
          "type": "number"
        },
        {
          "type": "number[]"
        },
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "multiple",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "multiple",
      "reflectToAttr": false,
      "docs": "If `true`, multiple dates can be selected at once. Only\napplies to `presentation=\"date\"` and `preferWheel=\"false\"`.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "name",
      "type": "string",
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "mutable": false,
      "attr": "name",
      "reflectToAttr": false,
      "docs": "The name of the control, which is submitted with the form data.",
      "docsTags": [],
      "default": "this.inputId",
      "values": [
        {
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "preferWheel",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "prefer-wheel",
      "reflectToAttr": false,
      "docs": "If `true`, a wheel picker will be rendered instead of a calendar grid\nwhere possible. If `false`, a calendar grid will be rendered instead of\na wheel picker where possible.\n\nA wheel picker can be rendered instead of a grid when `presentation` is\none of the following values: `\"date\"`, `\"date-time\"`, or `\"time-date\"`.\n\nA wheel picker will always be rendered regardless of\nthe `preferWheel` value when `presentation` is one of the following values:\n`\"time\"`, `\"month\"`, `\"month-year\"`, or `\"year\"`.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "presentation",
      "type": "\"date\" | \"date-time\" | \"month\" | \"month-year\" | \"time\" | \"time-date\" | \"year\"",
      "complexType": {
        "original": "DatetimePresentation",
        "resolved": "\"date\" | \"date-time\" | \"month\" | \"month-year\" | \"time\" | \"time-date\" | \"year\"",
        "references": {
          "DatetimePresentation": {
            "location": "import",
            "path": "./datetime-interface",
            "id": "src/components/datetime/datetime-interface.ts::DatetimePresentation"
          }
        }
      },
      "mutable": false,
      "attr": "presentation",
      "reflectToAttr": false,
      "docs": "Which values you want to select. `\"date\"` will show\na calendar picker to select the month, day, and year. `\"time\"`\nwill show a time picker to select the hour, minute, and (optionally)\nAM/PM. `\"date-time\"` will show the date picker first and time picker second.\n`\"time-date\"` will show the time picker first and date picker second.",
      "docsTags": [],
      "default": "'date-time'",
      "values": [
        {
          "value": "date",
          "type": "string"
        },
        {
          "value": "date-time",
          "type": "string"
        },
        {
          "value": "month",
          "type": "string"
        },
        {
          "value": "month-year",
          "type": "string"
        },
        {
          "value": "time",
          "type": "string"
        },
        {
          "value": "time-date",
          "type": "string"
        },
        {
          "value": "year",
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "readonly",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "readonly",
      "reflectToAttr": false,
      "docs": "If `true`, the datetime appears normal but is not interactive.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "showClearButton",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "show-clear-button",
      "reflectToAttr": false,
      "docs": "If `true`, a \"Clear\" button will be rendered alongside\nthe default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\ncomponent. Developers can also use the `button` slot\nif they want to customize these buttons. If custom\nbuttons are set in the `button` slot then the\ndefault buttons will not be rendered.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "showDefaultButtons",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "show-default-buttons",
      "reflectToAttr": false,
      "docs": "If `true`, the default \"Cancel\" and \"OK\" buttons\nwill be rendered at the bottom of the `ion-datetime`\ncomponent. Developers can also use the `button` slot\nif they want to customize these buttons. If custom\nbuttons are set in the `button` slot then the\ndefault buttons will not be rendered.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "showDefaultTimeLabel",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "show-default-time-label",
      "reflectToAttr": false,
      "docs": "If `true`, the default \"Time\" label will be rendered\nfor the time selector of the `ion-datetime` component.\nDevelopers can also use the `time-label` slot\nif they want to customize this label. If a custom\nlabel is set in the `time-label` slot then the\ndefault label will not be rendered.",
      "docsTags": [],
      "default": "true",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "showDefaultTitle",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "show-default-title",
      "reflectToAttr": false,
      "docs": "If `true`, a header will be shown above the calendar\npicker. This will include both the slotted title, and\nthe selected date.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "size",
      "type": "\"cover\" | \"fixed\"",
      "complexType": {
        "original": "'cover' | 'fixed'",
        "resolved": "\"cover\" | \"fixed\"",
        "references": {}
      },
      "mutable": false,
      "attr": "size",
      "reflectToAttr": false,
      "docs": "If `cover`, the `ion-datetime` will expand to cover the full width of its container.\nIf `fixed`, the `ion-datetime` will have a fixed width.",
      "docsTags": [],
      "default": "'fixed'",
      "values": [
        {
          "value": "cover",
          "type": "string"
        },
        {
          "value": "fixed",
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "titleSelectedDatesFormatter",
      "type": "((selectedDates: string[]) => string) | undefined",
      "complexType": {
        "original": "TitleSelectedDatesFormatter",
        "resolved": "((selectedDates: string[]) => string) | undefined",
        "references": {
          "TitleSelectedDatesFormatter": {
            "location": "import",
            "path": "./datetime-interface",
            "id": "src/components/datetime/datetime-interface.ts::TitleSelectedDatesFormatter"
          }
        }
      },
      "mutable": false,
      "reflectToAttr": false,
      "docs": "A callback used to format the header text that shows how many\ndates are selected. Only used if there are 0 or more than 1\nselected (i.e. unused for exactly 1). By default, the header\ntext is set to \"numberOfDates days\".",
      "docsTags": [],
      "values": [
        {
          "type": "((selectedDates: string[]) => string)"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "value",
      "type": "null | string | string[] | undefined",
      "complexType": {
        "original": "string | string[] | null",
        "resolved": "null | string | string[] | undefined",
        "references": {}
      },
      "mutable": true,
      "attr": "value",
      "reflectToAttr": false,
      "docs": "The value of the datetime as a valid ISO 8601 datetime string.\nThis should be an array of strings only when `multiple=\"true\"`.",
      "docsTags": [],
      "values": [
        {
          "type": "null"
        },
        {
          "type": "string"
        },
        {
          "type": "string[]"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "yearValues",
      "type": "number | number[] | string | undefined",
      "complexType": {
        "original": "number[] | number | string",
        "resolved": "number | number[] | string | undefined",
        "references": {}
      },
      "mutable": false,
      "attr": "year-values",
      "reflectToAttr": false,
      "docs": "Values used to create the list of selectable years. By default\nthe year values range between the `min` and `max` datetime inputs. However, to\ncontrol exactly which years to display, the `yearValues` input can take a number, an array\nof numbers, or string of comma separated numbers. For example, to show upcoming and\nrecent leap years, then this input's value would be `yearValues=\"2008,2012,2016,2020,2024\"`.",
      "docsTags": [],
      "values": [
        {
          "type": "number"
        },
        {
          "type": "number[]"
        },
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    }
  ],
  "methods": [
    {
      "name": "cancel",
      "returns": {
        "type": "Promise<void>",
        "docs": ""
      },
      "complexType": {
        "signature": "(closeOverlay?: boolean) => Promise<void>",
        "parameters": [
          {
            "tags": [],
            "text": ""
          }
        ],
        "references": {
          "Promise": {
            "location": "global",
            "id": "global::Promise"
          }
        },
        "return": "Promise<void>"
      },
      "signature": "cancel(closeOverlay?: boolean) => Promise<void>",
      "parameters": [],
      "docs": "Emits the ionCancel event and\noptionally closes the popover\nor modal that the datetime was\npresented in.",
      "docsTags": []
    },
    {
      "name": "confirm",
      "returns": {
        "type": "Promise<void>",
        "docs": ""
      },
      "complexType": {
        "signature": "(closeOverlay?: boolean) => Promise<void>",
        "parameters": [
          {
            "tags": [],
            "text": ""
          }
        ],
        "references": {
          "Promise": {
            "location": "global",
            "id": "global::Promise"
          }
        },
        "return": "Promise<void>"
      },
      "signature": "confirm(closeOverlay?: boolean) => Promise<void>",
      "parameters": [],
      "docs": "Confirms the selected datetime value, updates the\n`value` property, and optionally closes the popover\nor modal that the datetime was presented in.",
      "docsTags": []
    },
    {
      "name": "reset",
      "returns": {
        "type": "Promise<void>",
        "docs": ""
      },
      "complexType": {
        "signature": "(startDate?: string) => Promise<void>",
        "parameters": [
          {
            "tags": [],
            "text": ""
          }
        ],
        "references": {
          "Promise": {
            "location": "global",
            "id": "global::Promise"
          }
        },
        "return": "Promise<void>"
      },
      "signature": "reset(startDate?: string) => Promise<void>",
      "parameters": [],
      "docs": "Resets the internal state of the datetime but does not update the value.\nPassing a valid ISO-8601 string will reset the state of the component to the provided date.\nIf no value is provided, the internal state will be reset to the clamped value of the min, max and today.",
      "docsTags": []
    }
  ],
  "events": [
    {
      "event": "ionBlur",
      "detail": "void",
      "bubbles": true,
      "complexType": {
        "original": "void",
        "resolved": "void",
        "references": {}
      },
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the datetime loses focus.",
      "docsTags": []
    },
    {
      "event": "ionCancel",
      "detail": "void",
      "bubbles": true,
      "complexType": {
        "original": "void",
        "resolved": "void",
        "references": {}
      },
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the datetime selection was cancelled.",
      "docsTags": []
    },
    {
      "event": "ionChange",
      "detail": "DatetimeChangeEventDetail",
      "bubbles": true,
      "complexType": {
        "original": "DatetimeChangeEventDetail",
        "resolved": "DatetimeChangeEventDetail",
        "references": {
          "DatetimeChangeEventDetail": {
            "location": "import",
            "path": "./datetime-interface",
            "id": "src/components/datetime/datetime-interface.ts::DatetimeChangeEventDetail"
          }
        }
      },
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the value (selected date) has changed.",
      "docsTags": []
    },
    {
      "event": "ionFocus",
      "detail": "void",
      "bubbles": true,
      "complexType": {
        "original": "void",
        "resolved": "void",
        "references": {}
      },
      "cancelable": true,
      "composed": true,
      "docs": "Emitted when the datetime has focus.",
      "docsTags": []
    }
  ],
  "listeners": [],
  "styles": [
    {
      "name": "--background",
      "annotation": "prop",
      "docs": "The primary background of the datetime component."
    },
    {
      "name": "--background-rgb",
      "annotation": "prop",
      "docs": "The primary background of the datetime component in RGB format."
    },
    {
      "name": "--title-color",
      "annotation": "prop",
      "docs": "The text color of the title."
    },
    {
      "name": "--wheel-fade-background-rgb",
      "annotation": "prop",
      "docs": "The color of the gradient covering non-selected items when using a wheel style layout, or in the month/year picker for grid style layouts. Must be in RGB format, e.g. `255, 255, 255`."
    },
    {
      "name": "--wheel-highlight-background",
      "annotation": "prop",
      "docs": "The background of the highlight under the selected item when using a wheel style layout, or in the month/year picker for grid style layouts."
    }
  ],
  "slots": [
    {
      "name": "buttons",
      "docs": "The buttons in the datetime."
    },
    {
      "name": "time-label",
      "docs": "The label for the time selector in the datetime."
    },
    {
      "name": "title",
      "docs": "The title of the datetime."
    }
  ],
  "parts": [
    {
      "name": "calendar-day",
      "docs": "The individual buttons that display a day inside of the datetime\ncalendar."
    },
    {
      "name": "calendar-day active",
      "docs": "The currently selected calendar day."
    },
    {
      "name": "calendar-day disabled",
      "docs": "The calendar day that is disabled."
    },
    {
      "name": "calendar-day today",
      "docs": "The calendar day that contains the current day."
    },
    {
      "name": "month-year-button",
      "docs": "The button that opens the month/year picker when\nusing a grid style layout."
    },
    {
      "name": "time-button",
      "docs": "The button that opens the time picker when using a grid style\nlayout with `presentation=\"date-time\"` or `\"time-date\"`."
    },
    {
      "name": "time-button active",
      "docs": "The time picker button when the picker is open."
    },
    {
      "name": "wheel-item",
      "docs": "The individual items when using a wheel style layout, or in the\nmonth/year picker when using a grid style layout."
    },
    {
      "name": "wheel-item active",
      "docs": "The currently selected wheel-item."
    }
  ],
  "dependents": [],
  "dependencies": [
    "ion-buttons",
    "ion-button",
    "ion-picker-internal",
    "ion-picker-column-internal",
    "ion-item",
    "ion-label",
    "ion-icon",
    "ion-popover"
  ],
  "dependencyGraph": {
    "ion-datetime": [
      "ion-buttons",
      "ion-button",
      "ion-picker-internal",
      "ion-picker-column-internal",
      "ion-item",
      "ion-label",
      "ion-icon",
      "ion-popover"
    ],
    "ion-button": [
      "ion-ripple-effect"
    ],
    "ion-item": [
      "ion-icon",
      "ion-ripple-effect",
      "ion-note"
    ],
    "ion-popover": [
      "ion-backdrop"
    ]
  }
}