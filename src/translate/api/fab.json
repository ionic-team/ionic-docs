{
  "filePath": "src/components/fab/fab.tsx",
  "encapsulation": "shadow",
  "tag": "ion-fab",
  "docs": "",
  "docsTags": [],
  "usage": {},
  "props": [
    {
      "name": "activated",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": true,
      "attr": "activated",
      "reflectToAttr": false,
      "docs": "If `true`, both the `ion-fab-button` and all `ion-fab-list` inside `ion-fab` will become active.\nThat means `ion-fab-button` will become a `close` icon and `ion-fab-list` will become visible.",
      "docsTags": [
        {
          "name": "default",
          "text": "false"
        }
      ],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "edge",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "edge",
      "reflectToAttr": false,
      "docs": "If `true`, the fab will display on the edge of the header if\n`vertical` is `\"top\"`, and on the edge of the footer if\nit is `\"bottom\"`. Should be used with a `fixed` slot.",
      "docsTags": [
        {
          "name": "default",
          "text": "false"
        }
      ],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "horizontal",
      "type": "\"center\" | \"end\" | \"start\" | undefined",
      "complexType": {
        "original": "'start' | 'end' | 'center'",
        "resolved": "\"center\" | \"end\" | \"start\" | undefined",
        "references": {}
      },
      "mutable": false,
      "attr": "horizontal",
      "reflectToAttr": false,
      "docs": "Where to align the fab horizontally in the viewport.",
      "docsTags": [],
      "values": [
        {
          "value": "center",
          "type": "string"
        },
        {
          "value": "end",
          "type": "string"
        },
        {
          "value": "start",
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false,
      "getter": false,
      "setter": false
    },
    {
      "name": "vertical",
      "type": "\"bottom\" | \"center\" | \"top\" | undefined",
      "complexType": {
        "original": "'top' | 'bottom' | 'center'",
        "resolved": "\"bottom\" | \"center\" | \"top\" | undefined",
        "references": {}
      },
      "mutable": false,
      "attr": "vertical",
      "reflectToAttr": false,
      "docs": "Where to align the fab vertically in the viewport.",
      "docsTags": [],
      "values": [
        {
          "value": "bottom",
          "type": "string"
        },
        {
          "value": "center",
          "type": "string"
        },
        {
          "value": "top",
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false,
      "getter": false,
      "setter": false
    }
  ],
  "methods": [
    {
      "name": "close",
      "returns": {
        "type": "Promise<void>",
        "docs": ""
      },
      "complexType": {
        "signature": "() => Promise<void>",
        "parameters": [],
        "references": {
          "Promise": {
            "location": "global",
            "id": "global::Promise"
          }
        },
        "return": "Promise<void>"
      },
      "signature": "close() => Promise<void>",
      "parameters": [],
      "docs": "Close an active FAB list container.",
      "docsTags": []
    }
  ],
  "events": [],
  "listeners": [],
  "styles": [],
  "slots": [],
  "parts": [],
  "dependents": [],
  "dependencies": [],
  "dependencyGraph": {}
}