{
  "filePath": "src/components/reorder-group/reorder-group.tsx",
  "encapsulation": "none",
  "tag": "ion-reorder-group",
  "docs": "",
  "docsTags": [],
  "usage": {},
  "props": [
    {
      "name": "disabled",
      "type": "boolean",
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "mutable": false,
      "attr": "disabled",
      "reflectToAttr": false,
      "docs": "If `true`, the reorder will be hidden.",
      "docsTags": [
        {
          "name": "default",
          "text": "true"
        }
      ],
      "default": "true",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false,
      "getter": false,
      "setter": false
    }
  ],
  "methods": [
    {
      "name": "complete",
      "returns": {
        "type": "Promise<any>",
        "docs": ""
      },
      "complexType": {
        "signature": "(listOrReorder?: boolean | any[]) => Promise<any>",
        "parameters": [
          {
            "name": "listOrReorder",
            "type": "boolean | any[] | undefined",
            "docs": "A list of items to be sorted and returned in the new order or a\nboolean of whether or not the reorder should reposition the item."
          }
        ],
        "references": {
          "Promise": {
            "location": "global",
            "id": "global::Promise"
          }
        },
        "return": "Promise<any>"
      },
      "signature": "complete(listOrReorder?: boolean | any[]) => Promise<any>",
      "parameters": [
        {
          "name": "listOrReorder",
          "type": "boolean | any[] | undefined",
          "docs": "A list of items to be sorted and returned in the new order or a\nboolean of whether or not the reorder should reposition the item."
        }
      ],
      "docs": "Completes the reorder operation. Must be called by the `ionItemReorder` event.\n\nIf a list of items is passed, the list will be reordered and returned in the\nproper order.\n\nIf no parameters are passed or if `true` is passed in, the reorder will complete\nand the item will remain in the position it was dragged to. If `false` is passed,\nthe reorder will complete and the item will bounce back to its original position.",
      "docsTags": [
        {
          "name": "param",
          "text": "listOrReorder A list of items to be sorted and returned in the new order or a\nboolean of whether or not the reorder should reposition the item."
        }
      ]
    }
  ],
  "events": [
    {
      "event": "ionItemReorder",
      "detail": "ItemReorderEventDetail",
      "bubbles": true,
      "complexType": {
        "original": "ItemReorderEventDetail",
        "resolved": "ItemReorderEventDetail",
        "references": {
          "ItemReorderEventDetail": {
            "location": "import",
            "path": "./reorder-group-interface",
            "id": "src/components/reorder-group/reorder-group-interface.ts::ItemReorderEventDetail"
          }
        }
      },
      "cancelable": true,
      "composed": true,
      "docs": "Event that needs to be listened to in order to complete the reorder action.\nOnce the event has been emitted, the `complete()` method then needs\nto be called in order to finalize the reorder action.",
      "docsTags": []
    }
  ],
  "listeners": [],
  "styles": [],
  "slots": [],
  "parts": [],
  "dependents": [],
  "dependencies": [],
  "dependencyGraph": {}
}